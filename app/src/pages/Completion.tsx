import { useEffect, useState } from "react";
import { useLocation } from "react-router-dom";
import { useAuth } from "hooks/use-auth";
import axios from "axios";
import "styles/pages/completion.css"; // Create this CSS file for styling the receipt
import { jsPDF } from "jspdf";


const Completion = () => {
  const location = useLocation();
  const { user } = useAuth();
  console.log("Username from auth context:", user?.name);

  const [receiptData, setReceiptData] = useState({
    planName: "Unknown Plan",
    price: "0",
    paymentMethod: "Credit Card",
    dateOfPayment: new Date().toLocaleDateString(),
    subtotal: "0",
    tax: "0",
    totalCost: "0",
  });

  const saveInvoiceToPDF = () => {
    try {
      const doc = new jsPDF();

      // Title
      doc.setFontSize(18);
      doc.text("Invoice", 10, 10);
      doc.setFontSize(12);
      doc.text("Generated by Your Application", 10, 20);

      // Add Receipt Details
      doc.setFontSize(14);
      doc.text(`Plan Name: ${receiptData.planName}`, 10, 40);
      doc.text(`Payment Method: ${receiptData.paymentMethod}`, 10, 50);
      doc.text(`Date of Payment: ${receiptData.dateOfPayment}`, 10, 60);
      doc.text(`Subtotal: ${receiptData.subtotal}`, 10, 70);
      doc.text(`Tax (18% GST): ${receiptData.tax}`, 10, 80);
      doc.text(`Total Cost: ${receiptData.totalCost}`, 10, 90);

      // Save the PDF
      doc.save("invoice.pdf");

      alert("Invoice saved successfully as PDF!");
    } catch (err) {
      console.error("Error generating PDF:", err);
      alert("Failed to save the PDF invoice.");
    }
  };

  useEffect(() => {
    const username = user?.name!;

    console.log(" generated for username : " + username);

    if (!username) {
      console.error("No username found in localStorage");
      return;
    }

    // Retrieve plan details from localStorage
    const savedPlan = localStorage.getItem("selectedPlan");
    const { planName, price } = savedPlan
      ? JSON.parse(savedPlan)
      : { planName: "Unknown Plan", price: "0" };

    console.log("received plan name and price " + savedPlan);

    // Retrieve redirect status from query parameters
    const queryParams = new URLSearchParams(location.search);
    const redirectStatus = queryParams.get("redirect_status");

    if (redirectStatus === "succeeded") {
      // Mock data for receipt
      const tax = (parseFloat(price.replace(/[^\d.-]/g, "")) * 0.18).toFixed(2); // 18% GST
      const totalCost = (
        parseFloat(price.replace(/[^\d.-]/g, "")) + parseFloat(tax)
      ).toFixed(2);

      setReceiptData({
        planName: `${planName} plan has been activated, paid monthly.`,
        price,
        paymentMethod: "Credit Card", // Hardcoded for now
        dateOfPayment: new Date().toLocaleDateString(),
        subtotal: price,
        tax,
        totalCost,
      });

      // Save the payment details to the backend
      const savePaymentDetails = async () => {
        try {
          const response = await axios.post(
            "http://localhost:3001/api/payments/save-payment-details",
            {
              username,
              planName,
              price,
              paymentStatus: "succeeded",
            }
          );

          console.log("Payment details saved successfully:", response.data);
        } catch (error) {
          //console.error("Error saving payment details:", error.response?.data || error.message);
        }
      };

      savePaymentDetails();
    } else {
      console.error(
        "Payment failed or incomplete. Redirect status:",
        redirectStatus
      );
    }
  }, [location, user]);

  return (
    <div className="receipt-container">
      <div className="receipt-card">
        <div className="receipt-header">
          <div className="success-icon">âœ”</div>
          <h2>Your payment was successful</h2>
        </div>
        <div className="receipt-details">
          <div className="download-share">
            <button className="download-btn" onClick={saveInvoiceToPDF}>Download Invoice</button>
            <button className="share-btn">Share Invoice</button>
          </div>
          <div className="detail-item">
            <strong>Selected Plan:</strong>
            <span>{receiptData.planName}</span>
          </div>
          <div className="detail-item">
            <strong>Payment Method:</strong>
            <span>{receiptData.paymentMethod}</span>
          </div>
          <div className="detail-item">
            <strong>Date Of Payment:</strong>
            <span>{receiptData.dateOfPayment}</span>
          </div>
          <div className="detail-item">
            <strong>Subtotal:</strong>
            <span>{receiptData.subtotal}</span>
          </div>
          <div className="detail-item">
            <strong>Tax (18% GST applicable):</strong>
            <span>{receiptData.tax}</span>
          </div>
          <div className="detail-item total">
            <strong>Total Cost:</strong>
            <span>{receiptData.totalCost}</span>
          </div>
        </div>
      </div>
    </div>
  );
};

export default Completion;
